{"uid":"ea9844c16e1ea8cf","name":"Проверка запуска билда","fullName":"tests.backend.test_run_build.TestBuildRun#test_build_run","historyId":"7953a7bacd57ff40d5369b6e849e7b9f","time":{"start":1711278339665,"stop":1711278342105,"duration":2440},"description":"Тест проверяет запуск билда и его статус билд конфигурации после запуска","descriptionHtml":"<p>Тест проверяет запуск билда и его статус билд конфигурации после запуска</p>\n","status":"failed","statusMessage":"pytest_assume.plugin.FailedAssumption: \n1 Failed Assumptions:\n\ntests/backend/test_run_build.py:38: AssumptionFailure\n>>\twith pytest.assume:\nAssertionError: expected builds run count is 0, but '1' given\nassert 1 == 0\n +  where 1 = BuildQueueResponse(count=1, href='/app/rest/buildQueue?locator=buildType(id:pbDMfJMrUsFBuild)', build=[{'id': 1, 'buildTypeId': 'pbDMfJMrUsFBuild', 'state': 'queued', 'href': '/app/rest/buildQueue/id:1', 'webUrl': 'http://localhost:8111/viewQueued.html?itemId=1'}]).count","statusTrace":"self = <test_run_build.TestBuildRun object at 0x7fc6c9639090>\nsuper_admin = <entities.user.User object at 0x7fc6c96557b0>\nbuild_run_data = BuildConfigRunDataModel(buildType=BuildType(id='pbDMfJMrUsFBuild'))\n\n    @allure.feature('Управление запусками билд конфигураций')\n    @allure.story('Запуск билда')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title('Проверка запуска билда')\n    @allure.description('Тест проверяет запуск билда и его статус билд конфигурации после запуска')\n    def test_build_run(self, super_admin, build_run_data):\n        build_config_id = build_run_data.buildType.id\n        expected_state = \"queued\"\n        expected_build_queue_count = 0\n        with allure.step('Отправка запроса на запуск билда'):\n            response = super_admin.api_manager.build_run_api.run_build_config(build_run_data.model_dump()).text\n            build_config_run_response = BuildRunResponseModel.model_validate_json(response)\n    \n        with allure.step('Проверка присутствия ожидаемой build_config_id в теле ответа на запрос о запуске билда'):\n            with pytest.assume:\n                assert build_config_run_response.buildTypeId == build_config_id, \\\n                    f\"expected build config id is {build_config_id}, but '{build_config_run_response.buildTypeId}' given\"\n    \n        with allure.step(f'Проверка присутствия ожидаемого статуса билда \"{expected_state}\" в теле ответа'\n                         f' на запрос о запуске билда'):\n            with pytest.assume:\n                assert build_config_run_response.state == expected_state, \\\n                    f\"expected build config run state is {expected_state}, but '{build_config_run_response.state}' given\"\n    \n        time.sleep(2)  # дожидаемся, что билд собрался. В дальнейшем должно быть заменено на поллинг (создать декоратор)\n        with allure.step(\"Отправка запроса на получение информации о статусе билда\"):\n            response = super_admin.api_manager.build_run_api.get_build_status(build_config_id).text\n            build_queue_response = BuildQueueResponse.model_validate_json(response)\n    \n        with allure.step(f'Проверка количества непрошедших билдов\"'):\n            with pytest.assume:\n>               assert build_queue_response.count == expected_build_queue_count, \\\n                    f\"expected builds run count is {expected_build_queue_count}, but '{build_queue_response.count}' given\"\nE               pytest_assume.plugin.FailedAssumption: \nE               1 Failed Assumptions:\nE               \nE               tests/backend/test_run_build.py:38: AssumptionFailure\nE               >>\twith pytest.assume:\nE               AssertionError: expected builds run count is 0, but '1' given\nE               assert 1 == 0\nE                +  where 1 = BuildQueueResponse(count=1, href='/app/rest/buildQueue?locator=buildType(id:pbDMfJMrUsFBuild)', build=[{'id': 1, 'buildTypeId': 'pbDMfJMrUsFBuild', 'state': 'queued', 'href': '/app/rest/buildQueue/id:1', 'webUrl': 'http://localhost:8111/viewQueued.html?itemId=1'}]).count\n\ntests/backend/test_run_build.py:39: FailedAssumption","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1711278335885,"stop":1711278335912,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"user_session","time":{"start":1711278339574,"stop":1711278339574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"super_admin","time":{"start":1711278339575,"stop":1711278339581,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"created_project_data","time":{"start":1711278339582,"stop":1711278339645,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"project_data","time":{"start":1711278339582,"stop":1711278339582,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"created_build_config_data","time":{"start":1711278339645,"stop":1711278339664,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"build_config_data","time":{"start":1711278339645,"stop":1711278339645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"build_run_data","time":{"start":1711278339664,"stop":1711278339665,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false}],"testStage":{"description":"Тест проверяет запуск билда и его статус билд конфигурации после запуска","status":"failed","statusMessage":"pytest_assume.plugin.FailedAssumption: \n1 Failed Assumptions:\n\ntests/backend/test_run_build.py:38: AssumptionFailure\n>>\twith pytest.assume:\nAssertionError: expected builds run count is 0, but '1' given\nassert 1 == 0\n +  where 1 = BuildQueueResponse(count=1, href='/app/rest/buildQueue?locator=buildType(id:pbDMfJMrUsFBuild)', build=[{'id': 1, 'buildTypeId': 'pbDMfJMrUsFBuild', 'state': 'queued', 'href': '/app/rest/buildQueue/id:1', 'webUrl': 'http://localhost:8111/viewQueued.html?itemId=1'}]).count","statusTrace":"self = <test_run_build.TestBuildRun object at 0x7fc6c9639090>\nsuper_admin = <entities.user.User object at 0x7fc6c96557b0>\nbuild_run_data = BuildConfigRunDataModel(buildType=BuildType(id='pbDMfJMrUsFBuild'))\n\n    @allure.feature('Управление запусками билд конфигураций')\n    @allure.story('Запуск билда')\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title('Проверка запуска билда')\n    @allure.description('Тест проверяет запуск билда и его статус билд конфигурации после запуска')\n    def test_build_run(self, super_admin, build_run_data):\n        build_config_id = build_run_data.buildType.id\n        expected_state = \"queued\"\n        expected_build_queue_count = 0\n        with allure.step('Отправка запроса на запуск билда'):\n            response = super_admin.api_manager.build_run_api.run_build_config(build_run_data.model_dump()).text\n            build_config_run_response = BuildRunResponseModel.model_validate_json(response)\n    \n        with allure.step('Проверка присутствия ожидаемой build_config_id в теле ответа на запрос о запуске билда'):\n            with pytest.assume:\n                assert build_config_run_response.buildTypeId == build_config_id, \\\n                    f\"expected build config id is {build_config_id}, but '{build_config_run_response.buildTypeId}' given\"\n    \n        with allure.step(f'Проверка присутствия ожидаемого статуса билда \"{expected_state}\" в теле ответа'\n                         f' на запрос о запуске билда'):\n            with pytest.assume:\n                assert build_config_run_response.state == expected_state, \\\n                    f\"expected build config run state is {expected_state}, but '{build_config_run_response.state}' given\"\n    \n        time.sleep(2)  # дожидаемся, что билд собрался. В дальнейшем должно быть заменено на поллинг (создать декоратор)\n        with allure.step(\"Отправка запроса на получение информации о статусе билда\"):\n            response = super_admin.api_manager.build_run_api.get_build_status(build_config_id).text\n            build_queue_response = BuildQueueResponse.model_validate_json(response)\n    \n        with allure.step(f'Проверка количества непрошедших билдов\"'):\n            with pytest.assume:\n>               assert build_queue_response.count == expected_build_queue_count, \\\n                    f\"expected builds run count is {expected_build_queue_count}, but '{build_queue_response.count}' given\"\nE               pytest_assume.plugin.FailedAssumption: \nE               1 Failed Assumptions:\nE               \nE               tests/backend/test_run_build.py:38: AssumptionFailure\nE               >>\twith pytest.assume:\nE               AssertionError: expected builds run count is 0, but '1' given\nE               assert 1 == 0\nE                +  where 1 = BuildQueueResponse(count=1, href='/app/rest/buildQueue?locator=buildType(id:pbDMfJMrUsFBuild)', build=[{'id': 1, 'buildTypeId': 'pbDMfJMrUsFBuild', 'state': 'queued', 'href': '/app/rest/buildQueue/id:1', 'webUrl': 'http://localhost:8111/viewQueued.html?itemId=1'}]).count\n\ntests/backend/test_run_build.py:39: FailedAssumption","steps":[{"name":"Отправка запроса на запуск билда","time":{"start":1711278339666,"stop":1711278340092,"duration":426},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"Проверка присутствия ожидаемой build_config_id в теле ответа на запрос о запуске билда","time":{"start":1711278340092,"stop":1711278340094,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"Проверка присутствия ожидаемого статуса билда \"queued\" в теле ответа на запрос о запуске билда","time":{"start":1711278340094,"stop":1711278340095,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"Отправка запроса на получение информации о статусе билда","time":{"start":1711278342096,"stop":1711278342103,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"Проверка количества непрошедших билдов\"","time":{"start":1711278342103,"stop":1711278342105,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false}],"attachments":[{"uid":"b12a4cb5792faad","name":"log","source":"b12a4cb5792faad.txt","type":"text/plain","size":5200}],"parameters":[],"stepsCount":5,"attachmentsCount":1,"hasContent":true,"shouldDisplayMessage":true},"afterStages":[{"name":"project_data::0","time":{"start":1711278342111,"stop":1711278342219,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false},{"name":"user_session::0","time":{"start":1711278342220,"stop":1711278342220,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"Запуск билда"},{"name":"severity","value":"critical"},{"name":"feature","value":"Управление запусками билд конфигураций"},{"name":"parentSuite","value":"tests.backend"},{"name":"suite","value":"test_run_build"},{"name":"subSuite","value":"TestBuildRun"},{"name":"host","value":"fv-az695-240"},{"name":"thread","value":"8940-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.backend.test_run_build"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ea9844c16e1ea8cf.json","parameterValues":[]}